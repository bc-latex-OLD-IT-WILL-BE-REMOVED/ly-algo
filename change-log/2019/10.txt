==========
2019-10-21
==========

**New subminor version version::``0.1.1-beta``:** see before this date for all the changes.


**Affectation:** two new macros ``\Store*`` and ``\Store**`` give decorated equal signs.


**Interval:** the macro ``\CSinterval`` allows to write discrete intervals like ``1..4``.


==========
2019-10-20
==========

**New additional macros:** multi-parallel affectations can be indicated by using ``\MStore`` or ``\MPutIn``.


**Textual versions of main block instructions:** unuseful hyphens will not be printed anymore.


**"Algorithmic flowcharts":** the ``if`` frames use a soft yellow rather than an aggressive green and all the frames have the same default text width.


==========
2019-10-19
==========

**New version version::``0.1.0-beta``:** see below and before this date for all the changes.


**"Algorithmic flowcharts":** this uses the ¨tikz machinery.


==========
2019-10-18
==========

**Textual versions of main block instructions:** this is to facilitate the writing of ¨docs.


**New keywords for algorithms:** the macros ``\ForInList`` and ``\ForInListRev`` have been added to write loops over lists.


**Internal changes:** a factory has been built to work like with ``lymath``.


==========
2019-10-16
==========

**New keywords for algorithms.**

    1) ``\InState`` and ``\OutState`` allow to work with realworld interactions with algorithms.

    2) ``\PreCond`` and ``\PostCond`` is for formal proof of algorithms.


==========
2019-10-08
==========

**Wrong names for ``averb``:** the environments ``averb`` and ``averb*`` have been renamed ``pseudoverb`` and ``pseudoverb*`` because this environments allow to use ¨latex macros.


==========
2019-10-06
==========

**For the lists:** the POO uses french texts like all the commands for the algorithms.


==========
2019-10-05
==========

**Tools to work with lists have been added:** here are all the new features.

    1) The macro ``\List`` is for writing lists by giving their content.

    2) `\ListElt` prints symbolically the k-th elements of a named list.

    3) ``\ListUntil`` and ``\ListFrom`` are to indicated some special sub lists extracted from a list.

    4) The macro `\AddList` is a math binary operator for the concatenation of lists.

    5) The macro `\Len` is a math function to use to indicate the length of  a list.

    6) ``\Append``, ``\Append*`` and ``\Append**`` can be used to indicate that an element is appended to a list.

    7) ``\Prepend``, ``\Prepend*`` and ``\Prepend**`` can be used to indicate that an element is prepended to a list.

    9) ``\PopAt``, ``\PopAt*`` and ``\PopAt**`` can be used to indicate that the k-th element is popped from a list.

    9) ``\KeepL``, ``\KeepR`` and ``\KeepLR`` can be used to indicate that the first, last or "between" elements are popped from a list.


==========
2019-10-01
==========

**Empty caption for algorithms:** the macro ``\algovoidcaption`` allows to have a minimalistic caption without a name (the default behavior of ``\caption{}`` is not good).
